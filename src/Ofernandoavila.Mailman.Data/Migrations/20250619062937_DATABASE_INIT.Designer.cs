// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Ofernandoavila.Mailman.Data.Context;

#nullable disable

namespace Ofernandoavila.Mailman.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250619062937_DATABASE_INIT")]
    partial class DATABASE_INIT
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("en_US.utf8")
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Ofernandoavila.Mailman.Business.Models.AccessControl.Session", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("timezone('America/Bahia', now())");

                    b.Property<DateTime>("ExpirationTime")
                        .HasColumnType("timestamp");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("UserAgent")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TB_SESSION", (string)null);
                });

            modelBuilder.Entity("Ofernandoavila.Mailman.Business.Models.AccessControl.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("timezone('America/Bahia', now())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("FirstAccess")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<bool>("PasswordResetEmailSent")
                        .HasColumnType("boolean");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.Property<bool>("SignUpEmailSent")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_EMAIL_TB_USER");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_NAME_TB_USER");

                    b.HasIndex("RoleId")
                        .HasDatabaseName("IX_ROLEID_TB_USER");

                    b.ToTable("TB_USER", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e4493800-676b-4d9a-921a-f0bf171462f1"),
                            Active = true,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fernandoavilajunior@gmail.com",
                            FirstAccess = false,
                            Name = "System",
                            Password = "12e8f78ad914d3aef2532615a71c541bbed8473a6140399ca54d3ddd516e1ad8",
                            PasswordResetEmailSent = false,
                            RoleId = new Guid("0b9b96b8-c083-4c5e-b2b3-c9b142302def"),
                            SignUpEmailSent = false
                        });
                });

            modelBuilder.Entity("Ofernandoavila.Mailman.Business.Models.Parameter.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Active")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique()
                        .HasDatabaseName("IX_DESCRIPTION_TB_ROLE");

                    b.ToTable("TB_ROLE", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("0b9b96b8-c083-4c5e-b2b3-c9b142302def"),
                            Active = 1,
                            Description = "System"
                        },
                        new
                        {
                            Id = new Guid("775611a5-7f0b-46b9-8a2c-1f2526d865e5"),
                            Active = 1,
                            Description = "Developer"
                        });
                });

            modelBuilder.Entity("Ofernandoavila.Mailman.Business.Models.AccessControl.Session", b =>
                {
                    b.HasOne("Ofernandoavila.Mailman.Business.Models.AccessControl.User", "User")
                        .WithMany("Session")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ofernandoavila.Mailman.Business.Models.AccessControl.User", b =>
                {
                    b.HasOne("Ofernandoavila.Mailman.Business.Models.Parameter.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Ofernandoavila.Mailman.Business.Models.AccessControl.User", b =>
                {
                    b.Navigation("Session");
                });

            modelBuilder.Entity("Ofernandoavila.Mailman.Business.Models.Parameter.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
